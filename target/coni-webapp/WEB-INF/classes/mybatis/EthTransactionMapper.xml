<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.coin.dao.IEthTransactionDAO">
	<resultMap id="ethTransaction_DB_Result" type="com.cdkj.coin.domain.EthTransaction">
		<result column="hash" property="hash" />
		<result column="nonce" property="nonce" />
		<result column="block_hash" property="blockHash" />
		<result column="block_number" property="blockNumber" />
		<result column="transaction_index" property="transactionIndex" />
		<result column="from" property="from" />
		<result column="to" property="to" />
		<result column="value" property="value" />
		<result column="gas_price" property="gasPrice" />
		<result column="gas" property="gas" />
		<result column="block_create_datetime" property="blockCreateDatetime" />
		<result column="sync_datetime" property="syncDatetime" />
		<result column="status" property="status" />
	</resultMap>

	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="blockCreateDatetimeStart != null and blockCreateDatetimeStart != ''">
			    AND t.block_create_datetime >= #{blockCreateDatetimeStart}
			</if>
			<if test="blockCreateDatetimeEnd != null and blockCreateDatetimeEnd != ''">
				<![CDATA[ AND t.block_create_datetime <= #{blockCreateDatetimeEnd}  ]]>
			</if>
			<if test="from != null and from != ''">
				 t.from = #{from} OR
			</if>
			<if test="to != null and to != ''">
				 t.to = #{to}
			</if>
		</trim>
	</sql>

	<sql id="ethTx">
		`hash`,`nonce`,`block_hash`,`block_number`,`transaction_index`,`from`,`to`,`value`,`gas_price`,`gas`,
		`block_create_datetime`,`sync_datetime`,`status`
	</sql>

	<update id="updateTxStatus" parameterType="com.cdkj.coin.domain.EthTransaction">
		UPDATE  tcoin_eth_transaction SET `status` = #{status} where `hash` = #{hash}
	</update>

	<select id="select_ethTransaction" parameterType="ethTransaction" resultMap="ethTransaction_DB_Result">
		SELECT

		<include refid="ethTx"/>

		FROM
		tcoin_eth_transaction t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_ethTransaction_count" parameterType="ethTransaction"
		resultType="java.lang.Long">
		SELECT count(1) FROM tcoin_eth_transaction t
		<include refid="where_condition" />
	</select>


	<insert id="insertEthTransaction" parameterType="com.cdkj.coin.domain.EthTransaction">
		INSERT INTO
		`tcoin_eth_transaction`(`hash`, nonce, block_hash, block_number,transaction_index,`from`,`to`,`value`,gas_price,gas,
							  block_create_datetime,sync_datetime,`status`)
		VALUES(
			#{hash} ,#{nonce} ,#{blockHash} ,#{blockNumber} ,#{transactionIndex} ,
			#{from}
			,#{to},#{value},#{gasPrice},#{gas},#{blockCreateDatetime},now(),
			#{status}
		)
	</insert>

	<insert id="insertTxList" parameterType="List">

		INSERT INTO
			`tcoin_eth_transaction`(`hash`, nonce, block_hash, block_number,transaction_index,`from`,`to`,`value`,gas_price,gas,
									block_create_datetime,sync_datetime,`status`)
		VALUES

		  <foreach collection="list" item="tx" separator=",">
			  (
			  #{tx.hash} ,#{tx.nonce} ,#{tx.blockHash} ,#{tx.blockNumber} ,
			  #{tx.transactionIndex} ,#{tx.from}
			  ,#{tx.to},#{tx.value},#{tx.gasPrice},#{tx.gas},#{tx.blockCreateDatetime},now(),
			  #{tx.status}
			  )
		  </foreach>

	</insert>

</mapper>